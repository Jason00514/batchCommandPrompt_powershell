名前を付けて保存!!!!!
文字コード：ANSI

https://it-biz.online/it-skills/command-for/
【バッチ】forコマンド（繰り返し）を１分でわかりやすく解説

forコマンドの基本的な構文は以下の通り。
for %%変数 in (セット) do コマンド [コマンド引数]

--------begin
@echo off
for %%f in (*.txt) do (
    echo ファイル名: %%f
)
:: ディレクトリ内の各.txtファイルに対して、「ファイル名: ファイル名.txt」と表示されます。
-------end

--------begin
@echo off
for /l %%n in (1,1,5) do (
    echo %%n
)
:: 出力結果
:: 1
:: 2
:: 3
:: 4
:: 5
-------end
-----------------------------------------------------------------------------------------------------------------------------
/D - ディレクトリに対する繰り返しを行います。
/R - ディレクトリ構造を再帰的に処理します。
/L - 数値の範囲に基づいて繰り返しを行います。
/F - ファイルまたはコマンドの出力から読み取った結果に基づいて繰り返しを行います。


1. /D オプションの使用例(ディレクトリに対する繰り返しを行います。)
現在のディレクトリにあるすべてのサブディレクトリの名前を表示します。
@echo off
for /D %%d in (*) do (
    echo ディレクトリ: %%d
)

2. /R オプションの使用例(ディレクトリ構造を再帰的に処理します。)
特定のディレクトリ（ここではC:\Example）とそのサブディレクトリ内のすべての.txtファイルを検索します。
@echo off
for /R C:\Example %%f in (*.txt) do (
    echo 発見されたファイル: %%f
)

3. /L オプションの使用例(数値の範囲に基づいて繰り返しを行います。)
1から10までの数値を表示します。
@echo off
for /L %%n in (1,1,10) do (
    echo %%n
)


4. /F オプションの使用例(ファイルまたはコマンドの出力から読み取った結果に基づいて繰り返しを行います。)
特定のファイル（ここではfilelist.txt）から読み取った各行に対して繰り返し処理を行います。
@echo off
for /F "delims=" %%l in (filelist.txt) do (
    echo 行: %%l
)


-------------------------------------------------------------------------------
まとめ　forコマンドとは？

繰り返し処理の実行: 特定のコマンドを一連のファイル、数値、または文字列に対して繰り返し実行する。
自動化の強化:       複雑なタスクを効率的に自動化するために使用される。
柔軟性:            ファイルの一覧表示、テキストの検索、数値の範囲での繰り返し等、様々なシナリオに対応。
オプションの多様性:   異なるオプション（/D, /R, /L, /F等）を使用して、さまざまなタイプの繰り返し処理を実行することが可能


